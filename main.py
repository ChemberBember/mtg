import os
import pickle
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from apscheduler.schedulers.background import BackgroundScheduler
from datetime import datetime, timedelta
import asyncio

import config

# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
USER_DATA_FILE = "user_data.pkl"


# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞
def load_user_ids():
    if os.path.exists(USER_DATA_FILE):
        with open(USER_DATA_FILE, 'rb') as file:
            return pickle.load(file)
    return set()


# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–∞–π–ª
def save_user_ids(user_ids):
    with open(USER_DATA_FILE, 'wb') as file:
        pickle.dump(user_ids, file)


# –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_ids = load_user_ids()


# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.chat_id
    if user_id not in user_ids:
        user_ids.add(user_id)
        save_user_ids(user_ids)  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await update.message.reply_text(text="–ü—Ä–∏–≤–µ—Ç!üëã –ú–µ–Ω—è –∑–æ–≤—É—Ç –°–ø—ã–Ω—É –ú–∞—Ä–∏–∞–Ω–Ω–∞, —è –¥–∏–ø–ª–æ–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π\n"
                                                         "–ø—Å–∏—Ö–æ–∞–Ω–∞–ª–∏—Ç–∏–∫ —Å 15-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã. –Ø –ø–æ–º–æ–≥–∞—é –ª—é–¥—è–º\n"
                                                         "—Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Å–ª–æ–∂–Ω—ã—Ö —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è—Ö –∏\n"
                                                         "–æ–±—Ä–µ—Å—Ç–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –≥–∞—Ä–º–æ–Ω–∏—é.\n\n"
                                                         "*–¢–µ–º–∞ –≤–µ–±–∏–Ω–∞—Ä–∞:*\n"
                                                         "–°–∏–ª—å–Ω–æ –ª—é–±–ª—é –º—É–∂–∞, –Ω–æ –≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å –∂–µ–ª–∞–Ω–∏–µ —É–π—Ç–∏.\n"
                                                         "–ü–æ—á–µ–º—É –≤–æ–∑–Ω–∏–∫–∞—é—Ç —Ç–∞–∫–∏–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è –∏ –∫–∞–∫ —Å –Ω–∏–º–∏ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è?\n"
                                                         "\n"
                                                         "–ù–∞ –≤–µ–±–∏–Ω–∞—Ä–µ –º—ã –æ–±—Å—É–¥–∏–º:\n"
                                                         "üí¨ –ü—Ä–∏—Ä–æ–¥—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö.\n"
                                                         "üí¨ –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–≤—ã—Ö —á—É–≤—Å—Ç–≤.\n"
                                                         "üí¨ –ö–∞–∫ –æ–±—Ä–µ—Å—Ç–∏ –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –ª—é–±–æ–≤—å—é –∏ –ª–∏—á–Ω–æ–π —Å–≤–æ–±–æ–¥–æ–π.\n\n"
                                                         "–í–µ–±–∏–Ω–∞—Ä –ø—Ä–æ–π–¥–µ—Ç *12 —Å–µ–Ω—Ç—è–±—Ä—è –≤ 20:00.*\n"
                                                         "–Ø –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–ø–æ–º–Ω—é –≤–∞–º –æ –Ω–µ–º!\n\n"
                                                         "–ë—É–¥—É —Ä–∞–¥–∞ –≤–∞–º –ø–æ–º–æ—á—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —ç—Ç–æ–º –≤–æ–ø—Ä–æ—Å–µ!"
                                   ,parse_mode="Markdown")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤ –∑–∞–¥–∞–Ω–Ω—É—é –¥–∞—Ç—É
async def send_notifications(context: ContextTypes.DEFAULT_TYPE):
    for user_id in user_ids:
        await context.bot.send_message(chat_id=user_id, text="–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ! –°–µ–≥–æ–¥–Ω—è 12 —Å–µ–Ω—Ç—è–±—Ä—è 2024 –≥–æ–¥–∞!")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–¥–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É
async def send_test_notification(context: ContextTypes.DEFAULT_TYPE):
    user_id = context.job.data
    await context.bot.send_message(chat_id=user_id, text="–ü—Ä–∏–≤–µ—Ç!üëã –ú–µ–Ω—è –∑–æ–≤—É—Ç –°–ø—ã–Ω—É –ú–∞—Ä–∏–∞–Ω–Ω–∞, —è –¥–∏–ø–ª–æ–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π\n"
                                                         "–ø—Å–∏—Ö–æ–∞–Ω–∞–ª–∏—Ç–∏–∫ —Å 15-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã. –Ø –ø–æ–º–æ–≥–∞—é –ª—é–¥—è–º\n"
                                                         "—Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Å–ª–æ–∂–Ω—ã—Ö —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è—Ö –∏\n"
                                                         "–æ–±—Ä–µ—Å—Ç–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –≥–∞—Ä–º–æ–Ω–∏—é.\n\n"
                                                         "**–¢–µ–º–∞ –≤–µ–±–∏–Ω–∞—Ä–∞:**\n"
                                                         "–°–∏–ª—å–Ω–æ –ª—é–±–ª—é –º—É–∂–∞, –Ω–æ –≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å –∂–µ–ª–∞–Ω–∏–µ —É–π—Ç–∏.\n"
                                                         "–ü–æ—á–µ–º—É –≤–æ–∑–Ω–∏–∫–∞—é—Ç —Ç–∞–∫–∏–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è –∏ –∫–∞–∫ —Å –Ω–∏–º–∏ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è?\n"
                                                         "\n"
                                                         "–ù–∞ –≤–µ–±–∏–Ω–∞—Ä–µ –º—ã –æ–±—Å—É–¥–∏–º:\n"
                                                         "üí¨ –ü—Ä–∏—Ä–æ–¥—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö.\n"
                                                         "üí¨ –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–≤—ã—Ö —á—É–≤—Å—Ç–≤.\n"
                                                         "üí¨ –ö–∞–∫ –æ–±—Ä–µ—Å—Ç–∏ –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –ª—é–±–æ–≤—å—é –∏ –ª–∏—á–Ω–æ–π —Å–≤–æ–±–æ–¥–æ–π.\n\n"
                                                         "–í–µ–±–∏–Ω–∞—Ä –ø—Ä–æ–π–¥–µ—Ç **12 —Å–µ–Ω—Ç—è–±—Ä—è –≤ 20:00.**\n"
                                                         "–Ø –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–ø–æ–º–Ω—é –≤–∞–º –æ –Ω–µ–º!\n\n"
                                                         "–ë—É–¥—É —Ä–∞–¥–∞ –≤–∞–º –ø–æ–º–æ—á—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —ç—Ç–æ–º –≤–æ–ø—Ä–æ—Å–µ!"
                                   ,parse_mode="Markdown"
                                   )


# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /test
async def test(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.chat_id
    await update.message.reply_text("–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É.")

    # –ü–ª–∞–Ω–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É
    context.job_queue.run_once(send_test_notification, timedelta(minutes=1), data=user_id)


if __name__ == '__main__':
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å –≤–∞—à–∏–º —Ç–æ–∫–µ–Ω–æ–º
    application = ApplicationBuilder().token(config.TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ /start –∏ /test
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("test", test))

    # –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    scheduler = BackgroundScheduler()

    # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á—É –Ω–∞ 12 —Å–µ–Ω—Ç—è–±—Ä—è 2024 –≥–æ–¥–∞ –≤ 09:00 (–∏–ª–∏ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è)
    run_date = datetime(2024, 9, 12, 9, 0, 0)  # –£–∫–∞–∂–∏—Ç–µ –Ω—É–∂–Ω—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
    scheduler.add_job(lambda: application.create_task(send_notifications(None)), 'date', run_date=run_date)

    # –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    scheduler.start()

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    application.run_polling()
